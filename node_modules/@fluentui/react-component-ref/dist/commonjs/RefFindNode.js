"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.RefFindNode = void 0;

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var React = _interopRequireWildcard(require("react"));

var ReactDOM = _interopRequireWildcard(require("react-dom"));

var _utils = require("./utils");

var RefFindNode = /*#__PURE__*/function (_React$Component) {
  (0, _inheritsLoose2.default)(RefFindNode, _React$Component);

  function RefFindNode() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.prevNode = null;
    return _this;
  }

  var _proto = RefFindNode.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this.prevNode = ReactDOM.findDOMNode(this);
    (0, _utils.handleRef)(this.props.innerRef, this.prevNode);
  };

  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    var currentNode = ReactDOM.findDOMNode(this);

    if (this.prevNode !== currentNode) {
      this.prevNode = currentNode;
      (0, _utils.handleRef)(this.props.innerRef, currentNode);
    }

    if (prevProps.innerRef !== this.props.innerRef) {
      (0, _utils.handleRef)(this.props.innerRef, currentNode);
    }
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    (0, _utils.handleRef)(this.props.innerRef, null);
    delete this.prevNode;
  };

  _proto.render = function render() {
    var children = this.props.children;
    return children;
  };

  return RefFindNode;
}(React.Component);

exports.RefFindNode = RefFindNode;
//# sourceMappingURL=RefFindNode.js.map
