{"ast":null,"code":"import * as React from 'react';\nimport { useRef } from 'react';\nvar SMOOTH_PTG = 14 / 15;\nexport default function useMobileTouchMove(listRef, callback) {\n  var touchedRef = useRef(false);\n  var touchYRef = useRef(0);\n  var elementRef = useRef(null); // Smooth scroll\n\n  var intervalRef = useRef(null);\n  var cleanUpEvents;\n\n  var onTouchMove = function onTouchMove(e) {\n    if (touchedRef.current) {\n      e.preventDefault();\n      var currentY = Math.ceil(e.touches[0].pageY);\n      var offsetY = touchYRef.current - currentY;\n      touchYRef.current = currentY;\n      callback(offsetY); // Smooth interval\n\n      clearInterval(intervalRef.current);\n      intervalRef.current = setInterval(function () {\n        offsetY *= SMOOTH_PTG;\n        callback(offsetY);\n\n        if (Math.abs(offsetY) <= 0.1) {\n          clearInterval(intervalRef.current);\n        }\n      }, 16);\n    }\n  };\n\n  var onTouchEnd = function onTouchEnd() {\n    touchedRef.current = false;\n    cleanUpEvents();\n  };\n\n  var onTouchStart = function onTouchStart(e) {\n    cleanUpEvents();\n\n    if (e.touches.length === 1 && !touchedRef.current) {\n      touchedRef.current = true;\n      touchYRef.current = Math.ceil(e.touches[0].pageY);\n      elementRef.current = e.target;\n      elementRef.current.addEventListener('touchmove', onTouchMove);\n      elementRef.current.addEventListener('touchend', onTouchEnd);\n    }\n  };\n\n  cleanUpEvents = function cleanUpEvents() {\n    if (elementRef.current) {\n      elementRef.current.removeEventListener('touchmove', onTouchMove);\n      elementRef.current.removeEventListener('touchend', onTouchEnd);\n    }\n  };\n\n  React.useEffect(function () {\n    listRef.current.addEventListener('touchstart', onTouchStart);\n    return function () {\n      listRef.current.removeEventListener('touchstart', onTouchStart);\n      cleanUpEvents();\n      clearInterval(intervalRef.current);\n    };\n  }, []);\n}","map":null,"metadata":{},"sourceType":"module"}