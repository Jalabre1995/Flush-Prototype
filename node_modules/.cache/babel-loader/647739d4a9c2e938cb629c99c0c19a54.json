{"ast":null,"code":"import PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, useClassNamesOnNode } from '../../lib';\n/**\n * A component that allows to manage classNames on a DOM node in declarative manner.\n *\n * @deprecated This component is deprecated and will be removed in next major release.\n */\n\nfunction MountNode(props) {\n  useClassNamesOnNode(props.node, props.className); // A workaround for `react-docgen`: https://github.com/reactjs/react-docgen/issues/336\n\n  if (process.env.NODE_ENV === 'test') {\n    return /*#__PURE__*/React.createElement(\"div\", null);\n  }\n  /* istanbul ignore next */\n\n\n  return null;\n}\n\nMountNode.handledProps = [\"className\", \"node\"];\nMountNode.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** The DOM node where we will apply class names. Defaults to document.body. */\n  node: PropTypes.oneOfType([customPropTypes.domNode, customPropTypes.refObject])\n} : {};\nexport default MountNode;","map":null,"metadata":{},"sourceType":"module"}