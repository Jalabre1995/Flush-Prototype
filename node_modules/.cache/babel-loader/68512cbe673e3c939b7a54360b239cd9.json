{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport Animate from 'rc-animate';\nimport addEventListener from \"rc-util/es/Dom/addEventListener\";\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport VerticalAlignTopOutlined from '@ant-design/icons/VerticalAlignTopOutlined';\nimport throttleByAnimationFrame from '../_util/throttleByAnimationFrame';\nimport { ConfigContext } from '../config-provider';\nimport getScroll from '../_util/getScroll';\nimport scrollTo from '../_util/scrollTo';\n\nvar BackTop = function BackTop(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  var ref = /*#__PURE__*/React.createRef();\n  var scrollEvent = React.useRef();\n\n  var getDefaultTarget = function getDefaultTarget() {\n    return ref.current && ref.current.ownerDocument ? ref.current.ownerDocument : window;\n  };\n\n  var handleScroll = throttleByAnimationFrame(function (e) {\n    var visibilityHeight = props.visibilityHeight;\n    var scrollTop = getScroll(e.target, true);\n    setVisible(scrollTop > visibilityHeight);\n  });\n\n  var bindScrollEvent = function bindScrollEvent() {\n    var target = props.target;\n    var getTarget = target || getDefaultTarget;\n    var container = getTarget();\n    scrollEvent.current = addEventListener(container, 'scroll', function (e) {\n      handleScroll(e);\n    });\n    handleScroll({\n      target: container\n    });\n  };\n\n  React.useEffect(function () {\n    bindScrollEvent();\n    return function () {\n      if (scrollEvent.current) {\n        scrollEvent.current.remove();\n      }\n\n      handleScroll.cancel();\n    };\n  }, [props.target]);\n\n  var getVisible = function getVisible() {\n    if ('visible' in props) {\n      return props.visible;\n    }\n\n    return visible;\n  };\n\n  var scrollToTop = function scrollToTop(e) {\n    var onClick = props.onClick,\n        target = props.target,\n        _props$duration = props.duration,\n        duration = _props$duration === void 0 ? 450 : _props$duration;\n    scrollTo(0, {\n      getContainer: target || getDefaultTarget,\n      duration: duration\n    });\n\n    if (typeof onClick === 'function') {\n      onClick(e);\n    }\n  };\n\n  var renderChildren = function renderChildren(_ref) {\n    var prefixCls = _ref.prefixCls;\n    var children = props.children;\n    var defaultElement = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-content\")\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-icon\")\n    }, /*#__PURE__*/React.createElement(VerticalAlignTopOutlined, null)));\n    return /*#__PURE__*/React.createElement(Animate, {\n      component: \"\",\n      transitionName: \"fade\"\n    }, getVisible() ? /*#__PURE__*/React.createElement(\"div\", null, children || defaultElement) : null);\n  };\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var customizePrefixCls = props.prefixCls,\n      _props$className = props.className,\n      className = _props$className === void 0 ? '' : _props$className;\n  var prefixCls = getPrefixCls('back-top', customizePrefixCls);\n  var classString = classNames(prefixCls, className, _defineProperty({}, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl')); // fix https://fb.me/react-unknown-prop\n\n  var divProps = omit(props, ['prefixCls', 'className', 'children', 'visibilityHeight', 'target', 'visible']);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, divProps, {\n    className: classString,\n    onClick: scrollToTop,\n    ref: ref\n  }), renderChildren({\n    prefixCls: prefixCls\n  }));\n};\n\nBackTop.defaultProps = {\n  visibilityHeight: 400\n};\nexport default /*#__PURE__*/React.memo(BackTop);","map":null,"metadata":{},"sourceType":"module"}