{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport * as React from 'react';\nimport omit from 'omit.js';\nimport RcSteps from 'rc-steps';\nimport CheckOutlined from '@ant-design/icons/CheckOutlined';\nimport CloseOutlined from '@ant-design/icons/CloseOutlined';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\nimport Progress from '../progress';\n\nvar Steps = /*#__PURE__*/function (_React$Component) {\n  _inherits(Steps, _React$Component);\n\n  var _super = _createSuper(Steps);\n\n  function Steps() {\n    var _this;\n\n    _classCallCheck(this, Steps);\n\n    _this = _super.apply(this, arguments);\n\n    _this.renderSteps = function (_ref) {\n      var getPrefixCls = _ref.getPrefixCls,\n          direction = _ref.direction;\n      var prefixCls = getPrefixCls('steps', _this.props.prefixCls);\n      var iconPrefix = getPrefixCls('', _this.props.iconPrefix);\n      var _this$props = _this.props,\n          percent = _this$props.percent,\n          size = _this$props.size;\n      var className = classNames(_this.props.className, _defineProperty({}, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'));\n      var icons = {\n        finish: /*#__PURE__*/React.createElement(CheckOutlined, {\n          className: \"\".concat(prefixCls, \"-finish-icon\")\n        }),\n        error: /*#__PURE__*/React.createElement(CloseOutlined, {\n          className: \"\".concat(prefixCls, \"-error-icon\")\n        })\n      };\n\n      var stepIconRender = function stepIconRender(_ref2) {\n        var node = _ref2.node,\n            status = _ref2.status;\n\n        if (status === 'process' && percent !== undefined) {\n          // currently it's hard-coded, since we can't easily read the actually width of icon\n          var progressWidth = size === 'small' ? 32 : 40;\n          var iconWithProgress = /*#__PURE__*/React.createElement(\"div\", {\n            className: \"\".concat(prefixCls, \"-progress-icon\")\n          }, /*#__PURE__*/React.createElement(Progress, {\n            type: \"circle\",\n            percent: percent,\n            width: progressWidth,\n            strokeWidth: 4,\n            format: function format() {\n              return null;\n            }\n          }), node);\n          return iconWithProgress;\n        }\n\n        return node;\n      };\n\n      return /*#__PURE__*/React.createElement(RcSteps, _extends({\n        icons: icons\n      }, omit(_this.props, ['progress']), {\n        stepIcon: stepIconRender,\n        prefixCls: prefixCls,\n        iconPrefix: iconPrefix,\n        className: className\n      }));\n    };\n\n    return _this;\n  }\n\n  _createClass(Steps, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(ConfigConsumer, null, this.renderSteps);\n    }\n  }]);\n\n  return Steps;\n}(React.Component);\n\nexport { Steps as default };\nSteps.Step = RcSteps.Step;\nSteps.defaultProps = {\n  current: 0\n};","map":null,"metadata":{},"sourceType":"module"}