{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport * as React from 'react';\nimport { SubMenu as RcSubMenu } from 'rc-menu';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport MenuContext from './MenuContext';\nimport { isValidElement } from '../_util/reactNode';\n\nvar SubMenu = /*#__PURE__*/function (_React$Component) {\n  _inherits(SubMenu, _React$Component);\n\n  var _super = _createSuper(SubMenu);\n\n  function SubMenu() {\n    _classCallCheck(this, SubMenu);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SubMenu, [{\n    key: \"renderTitle\",\n    value: function renderTitle(inlineCollapsed) {\n      var _this$props = this.props,\n          icon = _this$props.icon,\n          title = _this$props.title,\n          level = _this$props.level,\n          rootPrefixCls = _this$props.rootPrefixCls;\n\n      if (!icon) {\n        return inlineCollapsed && level === 1 && title && typeof title === 'string' ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(rootPrefixCls, \"-inline-collapsed-noicon\")\n        }, title.charAt(0)) : title;\n      } // inline-collapsed.md demo 依赖 span 来隐藏文字,有 icon 属性，则内部包裹一个 span\n      // ref: https://github.com/ant-design/ant-design/pull/23456\n\n\n      var titleIsSpan = isValidElement(title) && title.type === 'span';\n      return /*#__PURE__*/React.createElement(React.Fragment, null, icon, titleIsSpan ? title : /*#__PURE__*/React.createElement(\"span\", null, title));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props2 = this.props,\n          rootPrefixCls = _this$props2.rootPrefixCls,\n          popupClassName = _this$props2.popupClassName;\n      return /*#__PURE__*/React.createElement(MenuContext.Consumer, null, function (_ref) {\n        var inlineCollapsed = _ref.inlineCollapsed,\n            antdMenuTheme = _ref.antdMenuTheme;\n        return /*#__PURE__*/React.createElement(RcSubMenu, _extends({}, omit(_this.props, ['icon']), {\n          title: _this.renderTitle(inlineCollapsed),\n          popupClassName: classNames(rootPrefixCls, \"\".concat(rootPrefixCls, \"-\").concat(antdMenuTheme), popupClassName)\n        }));\n      });\n    }\n  }]);\n\n  return SubMenu;\n}(React.Component);\n\nSubMenu.contextType = MenuContext; // fix issue:https://github.com/ant-design/ant-design/issues/8666\n\nSubMenu.isSubMenu = 1;\nexport default SubMenu;","map":null,"metadata":{},"sourceType":"module"}