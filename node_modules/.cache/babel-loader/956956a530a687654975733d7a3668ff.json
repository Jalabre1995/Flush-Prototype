{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport Trigger from 'rc-trigger';\nimport * as React from 'react';\nimport DropdownMenu from './DropdownMenu';\nvar BUILT_IN_PLACEMENTS = {\n  bottomRight: {\n    points: ['tl', 'br'],\n    offset: [0, 4],\n    overflow: {\n      adjustX: 0,\n      adjustY: 1\n    }\n  },\n  bottomLeft: {\n    points: ['tr', 'bl'],\n    offset: [0, 4],\n    overflow: {\n      adjustX: 0,\n      adjustY: 1\n    }\n  },\n  topRight: {\n    points: ['bl', 'tr'],\n    offset: [0, -4],\n    overflow: {\n      adjustX: 0,\n      adjustY: 1\n    }\n  },\n  topLeft: {\n    points: ['br', 'tl'],\n    offset: [0, -4],\n    overflow: {\n      adjustX: 0,\n      adjustY: 1\n    }\n  }\n};\n\nvar KeywordTrigger = /*#__PURE__*/function (_React$Component) {\n  _inherits(KeywordTrigger, _React$Component);\n\n  var _super = _createSuper(KeywordTrigger);\n\n  function KeywordTrigger() {\n    var _this;\n\n    _classCallCheck(this, KeywordTrigger);\n\n    _this = _super.apply(this, arguments);\n\n    _this.getDropdownPrefix = function () {\n      return \"\".concat(_this.props.prefixCls, \"-dropdown\");\n    };\n\n    _this.getDropdownElement = function () {\n      var options = _this.props.options;\n      return React.createElement(DropdownMenu, {\n        prefixCls: _this.getDropdownPrefix(),\n        options: options\n      });\n    };\n\n    _this.getDropDownPlacement = function () {\n      var _this$props = _this.props,\n          placement = _this$props.placement,\n          direction = _this$props.direction;\n      var popupPlacement = 'topRight';\n\n      if (direction === 'rtl') {\n        popupPlacement = placement === 'top' ? 'topLeft' : 'bottomLeft';\n      } else {\n        popupPlacement = placement === 'top' ? 'topRight' : 'bottomRight';\n      }\n\n      return popupPlacement;\n    };\n\n    return _this;\n  }\n\n  _createClass(KeywordTrigger, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          visible = _this$props2.visible,\n          transitionName = _this$props2.transitionName,\n          getPopupContainer = _this$props2.getPopupContainer;\n      var popupElement = this.getDropdownElement();\n      return React.createElement(Trigger, {\n        prefixCls: this.getDropdownPrefix(),\n        popupVisible: visible,\n        popup: popupElement,\n        popupPlacement: this.getDropDownPlacement(),\n        popupTransitionName: transitionName,\n        builtinPlacements: BUILT_IN_PLACEMENTS,\n        getPopupContainer: getPopupContainer\n      }, children);\n    }\n  }]);\n\n  return KeywordTrigger;\n}(React.Component);\n\nexport default KeywordTrigger;","map":null,"metadata":{},"sourceType":"module"}