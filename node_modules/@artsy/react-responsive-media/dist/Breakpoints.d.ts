import { MediaBreakpointProps } from "./Media";
/**
 * A union of possible breakpoint props.
 */
export declare type MediaBreakpointKey = keyof MediaBreakpointProps;
/**
 * Encapsulates all breakpoint data needed by the Media component. The data is
 * generated on initialization so no further runtime work is necessary.
 */
export declare class Breakpoints<B extends string> {
    static validKeys(): string[];
    private _sortedBreakpoints;
    private _breakpoints;
    private _mediaQueries;
    constructor(breakpoints: {
        [key: string]: number;
    });
    readonly sortedBreakpoints: B[];
    readonly dynamicResponsiveMediaQueries: {};
    readonly largestBreakpoint: string;
    findBreakpointsForWidths: (fromWidth: number, throughWidth: number) => B[] | undefined;
    findBreakpointAtWidth: (width: number) => B | undefined;
    toRuleSets(): string[];
    shouldRenderMediaQuery(breakpointProps: MediaBreakpointProps, onlyRenderAt: string[]): boolean;
    valuesWithBreakpointProps: <T>(values: T[]) => [T, MediaBreakpointProps<B>][];
    private _normalizeProps;
    private _createBreakpointQuery;
    private _createBreakpointQueries;
    private _findNextBreakpoint;
}
